// Generated by CoffeeScript 1.3.3
(function() {
  var MaxQueue, MinQueue,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  MinQueue = (function() {

    function MinQueue() {
      this.data = [];
    }

    MinQueue.prototype.push = function(value, priority) {
      this.data.push({
        value: value,
        priority: priority
      });
      return this.data.sort(this.condition);
    };

    MinQueue.prototype.pop = function() {
      var value;
      value = this.data.pop().value;
      return value;
    };

    MinQueue.prototype.condition = function(a, b) {
      return a.priority < b.priority;
    };

    return MinQueue;

  })();

  MaxQueue = (function(_super) {

    __extends(MaxQueue, _super);

    function MaxQueue() {
      return MaxQueue.__super__.constructor.apply(this, arguments);
    }

    MaxQueue.prototype.condition = function(a, b) {
      return a.priority > b.priority;
    };

    return MaxQueue;

  })(MinQueue);

  module.exports = {
    MinQueue: MinQueue,
    MaxQueue: MaxQueue
  };

}).call(this);
